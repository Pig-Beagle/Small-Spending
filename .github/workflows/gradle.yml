# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # Gradle build
    - name: Build with Gradle
      run: ./gradlew bootJar

    # docker hub login and push
    - name: docker hub login and push
      run: |
        docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_PASSWORD}}
        docker build -f Dockerfile -t ${{secrets.DOCKERHUB_USERNAME}}/small-spending .
        docker push ${{secrets.DOCKERHUB_USERNAME}}/small-spending

    # aws EC2
    - name: Aws EC2
      uses: appleboy/ssh-action@master
      id: deploy
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
      script: |
        sudo docker rm -f $(docker ps -qa)
        sudo docker pull ${{secrets.DOCKERHUB_USERNAME}}/small-spending
        docker-compose up -d
        docker image prune -f
